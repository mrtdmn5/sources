package com.amazonaws.regions;

import com.amazonaws.services.s3.internal.Constants;
import com.animaconnected.cloud.CloudEvent;
import com.animaconnected.secondo.provider.PoolIdProvider;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/* JADX INFO: Access modifiers changed from: package-private */
/* loaded from: classes.dex */
public class RegionDefaults {
    public static List<Region> getRegions() {
        ArrayList arrayList = new ArrayList();
        Region m = RegionDefaults$$ExternalSyntheticOutline0.m("af-south-1", "amazonaws.com", arrayList);
        updateRegion(m, ServiceAbbreviations.Autoscaling, "autoscaling.af-south-1.amazonaws.com", false, true);
        updateRegion(m, ServiceAbbreviations.Dynamodb, "dynamodb.af-south-1.amazonaws.com", false, true);
        updateRegion(m, ServiceAbbreviations.EC2, "ec2.af-south-1.amazonaws.com", false, true);
        updateRegion(m, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.af-south-1.amazonaws.com", false, true);
        updateRegion(m, "kms", "kms.af-south-1.amazonaws.com", false, true);
        updateRegion(m, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.af-south-1.amazonaws.com", false, true);
        updateRegion(m, "logs", "logs.af-south-1.amazonaws.com", false, true);
        updateRegion(m, "s3", "s3.af-south-1.amazonaws.com", false, true);
        updateRegion(m, ServiceAbbreviations.SNS, "sns.af-south-1.amazonaws.com", false, true);
        updateRegion(m, ServiceAbbreviations.SQS, "sqs.af-south-1.amazonaws.com", false, true);
        updateRegion(m, ServiceAbbreviations.STS, "sts.af-south-1.amazonaws.com", false, true);
        Region m2 = RegionDefaults$$ExternalSyntheticOutline0.m("ap-northeast-1", "amazonaws.com", arrayList);
        updateRegion(m2, ServiceAbbreviations.Autoscaling, "autoscaling.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "cognito-identity", "cognito-identity.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "cognito-idp", "cognito-idp.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "cognito-sync", "cognito-sync.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "data.iot", "data.iot.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, ServiceAbbreviations.Dynamodb, "dynamodb.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, ServiceAbbreviations.EC2, "ec2.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "firehose", "firehose.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "iot", "iot.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "kinesis", "kinesis.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "kms", "kms.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "logs", "logs.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "polly", "polly.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, "s3", "s3.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, ServiceAbbreviations.SimpleDB, "sdb.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, ServiceAbbreviations.SNS, "sns.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, ServiceAbbreviations.SQS, "sqs.ap-northeast-1.amazonaws.com", false, true);
        updateRegion(m2, ServiceAbbreviations.STS, "sts.ap-northeast-1.amazonaws.com", false, true);
        Region m3 = RegionDefaults$$ExternalSyntheticOutline0.m("ap-northeast-2", "amazonaws.com", arrayList);
        updateRegion(m3, ServiceAbbreviations.Autoscaling, "autoscaling.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, "cognito-identity", "cognito-identity.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, "cognito-idp", "cognito-idp.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, "cognito-sync", "cognito-sync.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, "data.iot", "data.iot.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, ServiceAbbreviations.Dynamodb, "dynamodb.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, ServiceAbbreviations.EC2, "ec2.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, "iot", "iot.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, "kinesis", "kinesis.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, "kms", "kms.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, "logs", "logs.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, "polly", "polly.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, "s3", "s3.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, ServiceAbbreviations.SNS, "sns.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, ServiceAbbreviations.SQS, "sqs.ap-northeast-2.amazonaws.com", false, true);
        updateRegion(m3, ServiceAbbreviations.STS, "sts.ap-northeast-2.amazonaws.com", false, true);
        Region m4 = RegionDefaults$$ExternalSyntheticOutline0.m("ap-south-1", "amazonaws.com", arrayList);
        updateRegion(m4, ServiceAbbreviations.Autoscaling, "autoscaling.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, "cognito-identity", "cognito-identity.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, "cognito-idp", "cognito-idp.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, "cognito-sync", "cognito-sync.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, ServiceAbbreviations.Dynamodb, "dynamodb.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, ServiceAbbreviations.EC2, "ec2.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, "kinesis", "kinesis.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, "kms", "kms.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, "logs", "logs.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, "polly", "polly.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, "s3", "s3.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, ServiceAbbreviations.SNS, "sns.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, ServiceAbbreviations.SQS, "sqs.ap-south-1.amazonaws.com", false, true);
        updateRegion(m4, ServiceAbbreviations.STS, "sts.ap-south-1.amazonaws.com", false, true);
        Region m5 = RegionDefaults$$ExternalSyntheticOutline0.m("ap-southeast-1", "amazonaws.com", arrayList);
        updateRegion(m5, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, "cognito-identity", "cognito-identity.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, "cognito-idp", "cognito-idp.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, "cognito-sync", "cognito-sync.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, "data.iot", "data.iot.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, ServiceAbbreviations.EC2, "ec2.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, "iot", "iot.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, "kinesis", "kinesis.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, "kms", "kms.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, "logs", "logs.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, "polly", "polly.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, "s3", "s3.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, ServiceAbbreviations.SNS, "sns.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, ServiceAbbreviations.SQS, "sqs.ap-southeast-1.amazonaws.com", false, true);
        updateRegion(m5, ServiceAbbreviations.STS, "sts.ap-southeast-1.amazonaws.com", false, true);
        Region m6 = RegionDefaults$$ExternalSyntheticOutline0.m("ap-southeast-2", "amazonaws.com", arrayList);
        updateRegion(m6, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, "cognito-identity", "cognito-identity.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, "cognito-idp", "cognito-idp.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, "cognito-sync", "cognito-sync.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, "data.iot", "data.iot.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, ServiceAbbreviations.EC2, "ec2.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, "iot", "iot.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, "kinesis", "kinesis.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, "kms", "kms.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, "logs", "logs.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, "polly", "polly.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, "s3", "s3.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, ServiceAbbreviations.SNS, "sns.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, ServiceAbbreviations.SQS, "sqs.ap-southeast-2.amazonaws.com", false, true);
        updateRegion(m6, ServiceAbbreviations.STS, "sts.ap-southeast-2.amazonaws.com", false, true);
        Region m7 = RegionDefaults$$ExternalSyntheticOutline0.m("ca-central-1", "amazonaws.com", arrayList);
        updateRegion(m7, ServiceAbbreviations.Autoscaling, "autoscaling.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, ServiceAbbreviations.Dynamodb, "dynamodb.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, ServiceAbbreviations.EC2, "ec2.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, "kinesis", "kinesis.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, "kms", "kms.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, "logs", "logs.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, "polly", "polly.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, "s3", "s3.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, ServiceAbbreviations.SNS, "sns.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, ServiceAbbreviations.SQS, "sqs.ca-central-1.amazonaws.com", false, true);
        updateRegion(m7, ServiceAbbreviations.STS, "sts.ca-central-1.amazonaws.com", false, true);
        Region m8 = RegionDefaults$$ExternalSyntheticOutline0.m("eu-central-1", "amazonaws.com", arrayList);
        updateRegion(m8, ServiceAbbreviations.Autoscaling, "autoscaling.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "cognito-identity", "cognito-identity.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "cognito-idp", "cognito-idp.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "cognito-sync", "cognito-sync.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "data.iot", "data.iot.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, ServiceAbbreviations.Dynamodb, "dynamodb.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, ServiceAbbreviations.EC2, "ec2.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "firehose", "firehose.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "iot", "iot.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "kinesis", "kinesis.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "kms", "kms.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "logs", "logs.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "polly", "polly.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, "s3", "s3.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, ServiceAbbreviations.SNS, "sns.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, ServiceAbbreviations.SQS, "sqs.eu-central-1.amazonaws.com", false, true);
        updateRegion(m8, ServiceAbbreviations.STS, "sts.eu-central-1.amazonaws.com", false, true);
        Region m9 = RegionDefaults$$ExternalSyntheticOutline0.m("eu-central-2", "amazonaws.com", arrayList);
        updateRegion(m9, ServiceAbbreviations.Autoscaling, "autoscaling.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "cognito-identity", "cognito-identity.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "cognito-idp", "cognito-idp.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "cognito-sync", "cognito-sync.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "data.iot", "data.iot.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, ServiceAbbreviations.Dynamodb, "dynamodb.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, ServiceAbbreviations.EC2, "ec2.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "firehose", "firehose.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "iot", "iot.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "kinesis", "kinesis.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "kms", "kms.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "logs", "logs.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "polly", "polly.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, "s3", "s3.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, ServiceAbbreviations.SimpleDB, "sdb.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, ServiceAbbreviations.SNS, "sns.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, ServiceAbbreviations.SQS, "sqs.eu-central-2.amazonaws.com", false, true);
        updateRegion(m9, ServiceAbbreviations.STS, "sts.eu-central-2.amazonaws.com", false, true);
        Region m10 = RegionDefaults$$ExternalSyntheticOutline0.m("eu-south-1", "amazonaws.com", arrayList);
        updateRegion(m10, ServiceAbbreviations.Autoscaling, "autoscaling.eu-south-1.amazonaws.com", false, true);
        updateRegion(m10, ServiceAbbreviations.Dynamodb, "dynamodb.eu-south-1.amazonaws.com", false, true);
        updateRegion(m10, ServiceAbbreviations.EC2, "ec2.eu-south-1.amazonaws.com", false, true);
        updateRegion(m10, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-south-1.amazonaws.com", false, true);
        updateRegion(m10, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.eu-south-1.amazonaws.com", false, true);
        updateRegion(m10, "logs", "logs.eu-south-1.amazonaws.com", false, true);
        updateRegion(m10, "s3", "s3.eu-south-1.amazonaws.com", false, true);
        updateRegion(m10, ServiceAbbreviations.SNS, "sns.eu-south-1.amazonaws.com", false, true);
        updateRegion(m10, ServiceAbbreviations.SQS, "sqs.eu-south-1.amazonaws.com", false, true);
        updateRegion(m10, ServiceAbbreviations.STS, "sts.eu-south-1.amazonaws.com", false, true);
        Region m11 = RegionDefaults$$ExternalSyntheticOutline0.m("eu-south-2", "amazonaws.com", arrayList);
        updateRegion(m11, ServiceAbbreviations.Autoscaling, "autoscaling.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "cognito-identity", "cognito-identity.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "cognito-idp", "cognito-idp.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "cognito-sync", "cognito-sync.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "data.iot", "data.iot.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, ServiceAbbreviations.Dynamodb, "dynamodb.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, ServiceAbbreviations.EC2, "ec2.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "firehose", "firehose.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "iot", "iot.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "kinesis", "kinesis.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "kms", "kms.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "logs", "logs.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "polly", "polly.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, "s3", "s3.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, ServiceAbbreviations.SimpleDB, "sdb.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, ServiceAbbreviations.SNS, "sns.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, ServiceAbbreviations.SQS, "sqs.eu-south-2.amazonaws.com", false, true);
        updateRegion(m11, ServiceAbbreviations.STS, "sts.eu-south-2.amazonaws.com", false, true);
        Region m12 = RegionDefaults$$ExternalSyntheticOutline0.m(PoolIdProvider.SANDBOX_REGION, "amazonaws.com", arrayList);
        updateRegion(m12, ServiceAbbreviations.Autoscaling, "autoscaling.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "cognito-identity", "cognito-identity.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "cognito-idp", "cognito-idp.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "cognito-sync", "cognito-sync.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "data.iot", "data.iot.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, ServiceAbbreviations.Dynamodb, "dynamodb.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, ServiceAbbreviations.EC2, "ec2.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "email", "email.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "firehose", "firehose.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "iot", "iot.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "kinesis", "kinesis.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "kms", "kms.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "logs", "logs.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "machinelearning", "machinelearning.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "polly", "polly.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "rekognition", "rekognition.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, "s3", "s3.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, ServiceAbbreviations.SimpleDB, "sdb.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, ServiceAbbreviations.SNS, "sns.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, ServiceAbbreviations.SQS, "sqs.eu-west-1.amazonaws.com", false, true);
        updateRegion(m12, ServiceAbbreviations.STS, "sts.eu-west-1.amazonaws.com", false, true);
        Region m13 = RegionDefaults$$ExternalSyntheticOutline0.m("eu-west-2", "amazonaws.com", arrayList);
        updateRegion(m13, ServiceAbbreviations.Autoscaling, "autoscaling.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, "cognito-identity", "cognito-identity.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, "cognito-idp", "cognito-idp.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, "cognito-sync", "cognito-sync.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, ServiceAbbreviations.Dynamodb, "dynamodb.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, ServiceAbbreviations.EC2, "ec2.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, "iot", "iot.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, "kinesis", "kinesis.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, "kms", "kms.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, "logs", "logs.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, "polly", "polly.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, "s3", "s3.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, ServiceAbbreviations.SNS, "sns.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, ServiceAbbreviations.SQS, "sqs.eu-west-2.amazonaws.com", false, true);
        updateRegion(m13, ServiceAbbreviations.STS, "sts.eu-west-2.amazonaws.com", false, true);
        Region m14 = RegionDefaults$$ExternalSyntheticOutline0.m("eu-west-3", "amazonaws.com", arrayList);
        updateRegion(m14, ServiceAbbreviations.Autoscaling, "autoscaling.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, ServiceAbbreviations.Dynamodb, "dynamodb.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, ServiceAbbreviations.EC2, "ec2.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, "kinesis", "kinesis.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, "kms", "kms.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, "logs", "logs.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, "polly", "polly.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, "s3", "s3.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, ServiceAbbreviations.SNS, "sns.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, ServiceAbbreviations.SQS, "sqs.eu-west-3.amazonaws.com", false, true);
        updateRegion(m14, ServiceAbbreviations.STS, "sts.eu-west-3.amazonaws.com", false, true);
        Region m15 = RegionDefaults$$ExternalSyntheticOutline0.m("sa-east-1", "amazonaws.com", arrayList);
        updateRegion(m15, ServiceAbbreviations.Autoscaling, "autoscaling.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, ServiceAbbreviations.Dynamodb, "dynamodb.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, ServiceAbbreviations.EC2, "ec2.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, "kinesis", "kinesis.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, "kms", "kms.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, "logs", "logs.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, "polly", "polly.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, "s3", "s3.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, ServiceAbbreviations.SimpleDB, "sdb.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, ServiceAbbreviations.SNS, "sns.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, ServiceAbbreviations.SQS, "sqs.sa-east-1.amazonaws.com", false, true);
        updateRegion(m15, ServiceAbbreviations.STS, "sts.sa-east-1.amazonaws.com", false, true);
        Region m16 = RegionDefaults$$ExternalSyntheticOutline0.m("us-east-1", "amazonaws.com", arrayList);
        updateRegion(m16, ServiceAbbreviations.Autoscaling, "autoscaling.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "cognito-identity", "cognito-identity.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "cognito-idp", "cognito-idp.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "cognito-sync", "cognito-sync.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "data.iot", "data.iot.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, ServiceAbbreviations.Dynamodb, "dynamodb.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, ServiceAbbreviations.EC2, "ec2.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "email", "email.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "firehose", "firehose.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "iot", "iot.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "kinesis", "kinesis.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "kms", "kms.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "logs", "logs.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "machinelearning", "machinelearning.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "mobileanalytics", "mobileanalytics.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "pinpoint", "pinpoint.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "polly", "polly.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "rekognition", "rekognition.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, "s3", Constants.S3_HOSTNAME, false, true);
        updateRegion(m16, ServiceAbbreviations.SimpleDB, "sdb.amazonaws.com", false, true);
        updateRegion(m16, ServiceAbbreviations.SNS, "sns.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, ServiceAbbreviations.SQS, "sqs.us-east-1.amazonaws.com", false, true);
        updateRegion(m16, ServiceAbbreviations.STS, "sts.us-east-1.amazonaws.com", false, true);
        Region m17 = RegionDefaults$$ExternalSyntheticOutline0.m("us-east-2", "amazonaws.com", arrayList);
        updateRegion(m17, ServiceAbbreviations.Autoscaling, "autoscaling.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, "cognito-identity", "cognito-identity.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, "cognito-idp", "cognito-idp.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, "cognito-sync", "cognito-sync.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, ServiceAbbreviations.Dynamodb, "dynamodb.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, ServiceAbbreviations.EC2, "ec2.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, "firehose", "firehose.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, "iot", "iot.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, "kinesis", "kinesis.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, "kms", "kms.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, "logs", "logs.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, "polly", "polly.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, "s3", "s3.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, ServiceAbbreviations.SNS, "sns.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, ServiceAbbreviations.SQS, "sqs.us-east-2.amazonaws.com", false, true);
        updateRegion(m17, ServiceAbbreviations.STS, "sts.us-east-2.amazonaws.com", false, true);
        Region m18 = RegionDefaults$$ExternalSyntheticOutline0.m("us-west-1", "amazonaws.com", arrayList);
        updateRegion(m18, ServiceAbbreviations.Autoscaling, "autoscaling.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, ServiceAbbreviations.Dynamodb, "dynamodb.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, ServiceAbbreviations.EC2, "ec2.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, "kinesis", "kinesis.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, "kms", "kms.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, "logs", "logs.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, "polly", "polly.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, "s3", "s3.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, ServiceAbbreviations.SimpleDB, "sdb.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, ServiceAbbreviations.SNS, "sns.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, ServiceAbbreviations.SQS, "sqs.us-west-1.amazonaws.com", false, true);
        updateRegion(m18, ServiceAbbreviations.STS, "sts.us-west-1.amazonaws.com", false, true);
        Region m19 = RegionDefaults$$ExternalSyntheticOutline0.m("us-west-2", "amazonaws.com", arrayList);
        updateRegion(m19, ServiceAbbreviations.Autoscaling, "autoscaling.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "cognito-identity", "cognito-identity.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "cognito-idp", "cognito-idp.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "cognito-sync", "cognito-sync.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "data.iot", "data.iot.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, ServiceAbbreviations.Dynamodb, "dynamodb.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, ServiceAbbreviations.EC2, "ec2.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "email", "email.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "firehose", "firehose.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "iot", "iot.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "kinesis", "kinesis.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "kms", "kms.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "logs", "logs.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "polly", "polly.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "rekognition", "rekognition.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, "s3", "s3.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, ServiceAbbreviations.SimpleDB, "sdb.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, ServiceAbbreviations.SNS, "sns.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, ServiceAbbreviations.SQS, "sqs.us-west-2.amazonaws.com", false, true);
        updateRegion(m19, ServiceAbbreviations.STS, "sts.us-west-2.amazonaws.com", false, true);
        Region m20 = RegionDefaults$$ExternalSyntheticOutline0.m("cn-north-1", "amazonaws.com.cn", arrayList);
        updateRegion(m20, ServiceAbbreviations.Autoscaling, "autoscaling.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, "cognito-identity", "cognito-identity.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, ServiceAbbreviations.Dynamodb, "dynamodb.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, ServiceAbbreviations.EC2, "ec2.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, "iot", "iot.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, "kinesis", "kinesis.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, "logs", "logs.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, "s3", "s3.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, ServiceAbbreviations.SNS, "sns.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, ServiceAbbreviations.SQS, "sqs.cn-north-1.amazonaws.com.cn", false, true);
        updateRegion(m20, ServiceAbbreviations.STS, "sts.cn-north-1.amazonaws.com.cn", false, true);
        Region m21 = RegionDefaults$$ExternalSyntheticOutline0.m("cn-northwest-1", "amazonaws.com.cn", arrayList);
        updateRegion(m21, ServiceAbbreviations.Autoscaling, "autoscaling.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(m21, ServiceAbbreviations.Dynamodb, "dynamodb.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(m21, ServiceAbbreviations.EC2, "ec2.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(m21, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(m21, "kinesis", "kinesis.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(m21, "logs", "logs.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(m21, "s3", "s3.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(m21, ServiceAbbreviations.SNS, "sns.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(m21, ServiceAbbreviations.SQS, "sqs.cn-northwest-1.amazonaws.com.cn", false, true);
        updateRegion(m21, ServiceAbbreviations.STS, "sts.cn-northwest-1.amazonaws.com.cn", false, true);
        Region m22 = RegionDefaults$$ExternalSyntheticOutline0.m("us-gov-west-1", "amazonaws.com", arrayList);
        updateRegion(m22, ServiceAbbreviations.Autoscaling, "autoscaling.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, ServiceAbbreviations.Dynamodb, "dynamodb.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, ServiceAbbreviations.EC2, "ec2.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, "kinesis", "kinesis.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, "kms", "kms.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, "logs", "logs.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, "rekognition", "rekognition.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, "s3", "s3.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, ServiceAbbreviations.SNS, "sns.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, ServiceAbbreviations.SQS, "sqs.us-gov-west-1.amazonaws.com", false, true);
        updateRegion(m22, ServiceAbbreviations.STS, "sts.us-gov-west-1.amazonaws.com", false, true);
        Region m23 = RegionDefaults$$ExternalSyntheticOutline0.m("us-gov-east-1", "amazonaws.com", arrayList);
        updateRegion(m23, ServiceAbbreviations.Autoscaling, "autoscaling.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, ServiceAbbreviations.Dynamodb, "dynamodb.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, ServiceAbbreviations.EC2, "ec2.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, "kinesis", "kinesis.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, "kms", "kms.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, "logs", "logs.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, "rekognition", "rekognition.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, "s3", "s3.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, ServiceAbbreviations.SNS, "sns.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, ServiceAbbreviations.SQS, "sqs.us-gov-east-1.amazonaws.com", false, true);
        updateRegion(m23, ServiceAbbreviations.STS, "sts.us-gov-east-1.amazonaws.com", false, true);
        Region m24 = RegionDefaults$$ExternalSyntheticOutline0.m("eu-north-1", "amazonaws.com", arrayList);
        updateRegion(m24, ServiceAbbreviations.Autoscaling, "autoscaling.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, ServiceAbbreviations.Dynamodb, "dynamodb.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, ServiceAbbreviations.EC2, "ec2.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, "firehose", "firehose.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, "iot", "iot.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, "kinesis", "kinesis.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, "kms", "kms.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, "logs", "logs.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, "s3", "s3.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, ServiceAbbreviations.SNS, "sns.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, ServiceAbbreviations.SQS, "sqs.eu-north-1.amazonaws.com", false, true);
        updateRegion(m24, ServiceAbbreviations.STS, "sts.eu-north-1.amazonaws.com", false, true);
        Region m25 = RegionDefaults$$ExternalSyntheticOutline0.m("ap-east-1", "amazonaws.com", arrayList);
        updateRegion(m25, ServiceAbbreviations.Autoscaling, "autoscaling.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, ServiceAbbreviations.Dynamodb, "dynamodb.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, ServiceAbbreviations.EC2, "ec2.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, "firehose", "firehose.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, "kinesis", "kinesis.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, "kms", "kms.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, "logs", "logs.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, "polly", "polly.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, "s3", "s3.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, ServiceAbbreviations.SNS, "sns.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, ServiceAbbreviations.SQS, "sqs.ap-east-1.amazonaws.com", false, true);
        updateRegion(m25, ServiceAbbreviations.STS, "sts.ap-east-1.amazonaws.com", false, true);
        Region m26 = RegionDefaults$$ExternalSyntheticOutline0.m("me-south-1", "amazonaws.com", arrayList);
        updateRegion(m26, ServiceAbbreviations.Autoscaling, "autoscaling.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "cognito-identity", "cognito-identity.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "cognito-idp", "cognito-idp.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "cognito-sync", "cognito-sync.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "data.iot", "data.iot.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, ServiceAbbreviations.Dynamodb, "dynamodb.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, ServiceAbbreviations.EC2, "ec2.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "firehose", "firehose.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "iot", "iot.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "kinesis", "kinesis.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "kms", "kms.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "logs", "logs.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "polly", "polly.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, "s3", "s3.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, ServiceAbbreviations.SimpleDB, "sdb.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, ServiceAbbreviations.SNS, "sns.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, ServiceAbbreviations.SQS, "sqs.me-south-1.amazonaws.com", false, true);
        updateRegion(m26, ServiceAbbreviations.STS, "sts.me-south-1.amazonaws.com", false, true);
        Region m27 = RegionDefaults$$ExternalSyntheticOutline0.m("ap-southeast-3", "amazonaws.com", arrayList);
        updateRegion(m27, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "cognito-identity", "cognito-identity.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "cognito-idp", "cognito-idp.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "cognito-sync", "cognito-sync.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "data.iot", "data.iot.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, ServiceAbbreviations.EC2, "ec2.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "firehose", "firehose.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "iot", "iot.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "kinesis", "kinesis.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "kms", "kms.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "logs", "logs.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "polly", "polly.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, "s3", "s3.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, ServiceAbbreviations.SNS, "sns.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, ServiceAbbreviations.SQS, "sqs.ap-southeast-3.amazonaws.com", false, true);
        updateRegion(m27, ServiceAbbreviations.STS, "sts.ap-southeast-3.amazonaws.com", false, true);
        Region m28 = RegionDefaults$$ExternalSyntheticOutline0.m("me-central-1", "amazonaws.com", arrayList);
        updateRegion(m28, ServiceAbbreviations.Autoscaling, "autoscaling.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "cognito-identity", "cognito-identity.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "cognito-idp", "cognito-idp.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "cognito-sync", "cognito-sync.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "data.iot", "data.iot.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, ServiceAbbreviations.Dynamodb, "dynamodb.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, ServiceAbbreviations.EC2, "ec2.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "firehose", "firehose.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "iot", "iot.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "kinesis", "kinesis.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "kms", "kms.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "logs", "logs.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "polly", "polly.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, "s3", "s3.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, ServiceAbbreviations.SimpleDB, "sdb.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, ServiceAbbreviations.SNS, "sns.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, ServiceAbbreviations.SQS, "sqs.me-central-1.amazonaws.com", false, true);
        updateRegion(m28, ServiceAbbreviations.STS, "sts.me-central-1.amazonaws.com", false, true);
        Region m29 = RegionDefaults$$ExternalSyntheticOutline0.m("ap-south-2", "amazonaws.com", arrayList);
        updateRegion(m29, ServiceAbbreviations.Autoscaling, "autoscaling.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "cognito-identity", "cognito-identity.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "cognito-idp", "cognito-idp.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "cognito-sync", "cognito-sync.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "data.iot", "data.iot.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, ServiceAbbreviations.Dynamodb, "dynamodb.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, ServiceAbbreviations.EC2, "ec2.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "firehose", "firehose.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "iot", "iot.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "kinesis", "kinesis.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "kms", "kms.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "logs", "logs.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "polly", "polly.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, "s3", "s3.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, ServiceAbbreviations.SimpleDB, "sdb.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, ServiceAbbreviations.SNS, "sns.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, ServiceAbbreviations.SQS, "sqs.ap-south-2.amazonaws.com", false, true);
        updateRegion(m29, ServiceAbbreviations.STS, "sts.ap-south-2.amazonaws.com", false, true);
        Region m30 = RegionDefaults$$ExternalSyntheticOutline0.m("ap-southeast-4", "amazonaws.com", arrayList);
        updateRegion(m30, ServiceAbbreviations.Autoscaling, "autoscaling.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "cognito-identity", "cognito-identity.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "cognito-idp", "cognito-idp.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "cognito-sync", "cognito-sync.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "data.iot", "data.iot.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, ServiceAbbreviations.Dynamodb, "dynamodb.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, ServiceAbbreviations.EC2, "ec2.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, ServiceAbbreviations.ElasticLoadbalancing, "elasticloadbalancing.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "firehose", "firehose.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "iot", "iot.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "kinesis", "kinesis.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "kms", "kms.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, CloudEvent.CLOUD_FEATURE_LAMBDA, "lambda.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "logs", "logs.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "polly", "polly.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, "s3", "s3.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, ServiceAbbreviations.SimpleDB, "sdb.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, ServiceAbbreviations.SNS, "sns.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, ServiceAbbreviations.SQS, "sqs.ap-southeast-4.amazonaws.com", false, true);
        updateRegion(m30, ServiceAbbreviations.STS, "sts.ap-southeast-4.amazonaws.com", false, true);
        return arrayList;
    }

    private static void updateRegion(Region region, String str, String str2, boolean z, boolean z2) {
        Map<String, String> serviceEndpoints = region.getServiceEndpoints();
        Map<String, Boolean> httpSupport = region.getHttpSupport();
        Map<String, Boolean> httpsSupport = region.getHttpsSupport();
        serviceEndpoints.put(str, str2);
        httpSupport.put(str, Boolean.valueOf(z));
        httpsSupport.put(str, Boolean.valueOf(z2));
    }
}
